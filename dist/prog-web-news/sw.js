!function(){"use strict";try{self["workbox:core:6.1.2"]&&_()}catch(e){}const e={"invalid-value":({paramName:e,validValueDescription:t,value:a})=>{if(!e||!t)throw new Error("Unexpected input to 'invalid-value' error.");return`The '${e}' parameter was given a value with an unexpected value. ${t} Received a value of `+JSON.stringify(a)+"."},"not-an-array":({moduleName:e,className:t,funcName:a,paramName:s})=>{if(!(e&&t&&a&&s))throw new Error("Unexpected input to 'not-an-array' error.");return`The parameter '${s}' passed into '${e}.${t}.${a}()' must be an array.`},"incorrect-type":({expectedType:e,paramName:t,moduleName:a,className:s,funcName:r})=>{if(!(e&&t&&a&&r))throw new Error("Unexpected input to 'incorrect-type' error.");return`The parameter '${t}' passed into '${a}.${s?s+".":""}${r}()' must be of type ${e}.`},"incorrect-class":({expectedClass:e,paramName:t,moduleName:a,className:s,funcName:r,isReturnValueProblem:n})=>{if(!e||!a||!r)throw new Error("Unexpected input to 'incorrect-class' error.");return n?`The return value from '${a}.${s?s+".":""}${r}()' must be an instance of class ${e.name}.`:`The parameter '${t}' passed into '${a}.${s?s+".":""}${r}()' must be an instance of class ${e.name}.`},"missing-a-method":({expectedMethod:e,paramName:t,moduleName:a,className:s,funcName:r})=>{if(!(e&&t&&a&&s&&r))throw new Error("Unexpected input to 'missing-a-method' error.");return`${a}.${s}.${r}() expected the '${t}' parameter to expose a '${e}' method.`},"add-to-cache-list-unexpected-type":({entry:e})=>`An unexpected entry was passed to 'workbox-precaching.PrecacheController.addToCacheList()' The entry '${JSON.stringify(e)}' isn't supported. You must supply an array of strings with one or more characters, objects with a url property or Request objects.`,"add-to-cache-list-conflicting-entries":({firstEntry:e,secondEntry:t})=>{if(!e||!t)throw new Error("Unexpected input to 'add-to-cache-list-duplicate-entries' error.");return"Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL "+e._entryId+" but different revision details. Workbox is unable to cache and version the asset correctly. Please remove one of the entries."},"plugin-error-request-will-fetch":({thrownError:e})=>{if(!e)throw new Error("Unexpected input to 'plugin-error-request-will-fetch', error.");return`An error was thrown by a plugins 'requestWillFetch()' method. The thrown error message was: '${e.message}'.`},"invalid-cache-name":({cacheNameId:e,value:t})=>{if(!e)throw new Error("Expected a 'cacheNameId' for error 'invalid-cache-name'");return`You must provide a name containing at least one character for setCacheDetails({${e}: '...'}). Received a value of '${JSON.stringify(t)}'`},"unregister-route-but-not-found-with-method":({method:e})=>{if(!e)throw new Error("Unexpected input to 'unregister-route-but-not-found-with-method' error.");return`The route you're trying to unregister was not  previously registered for the method type '${e}'.`},"unregister-route-route-not-registered":()=>"The route you're trying to unregister was not previously registered.","queue-replay-failed":({name:e})=>`Replaying the background sync queue '${e}' failed.`,"duplicate-queue-name":({name:e})=>`The Queue name '${e}' is already being used. All instances of backgroundSync.Queue must be given unique names.`,"expired-test-without-max-age":({methodName:e,paramName:t})=>`The '${e}()' method can only be used when the '${t}' is used in the constructor.`,"unsupported-route-type":({moduleName:e,className:t,funcName:a,paramName:s})=>`The supplied '${s}' parameter was an unsupported type. Please check the docs for ${e}.${t}.${a} for valid input types.`,"not-array-of-class":({value:e,expectedClass:t,moduleName:a,className:s,funcName:r,paramName:n})=>`The supplied '${n}' parameter must be an array of '${t}' objects. Received '${JSON.stringify(e)},'. Please check the call to ${a}.${s}.${r}() to fix the issue.`,"max-entries-or-age-required":({moduleName:e,className:t,funcName:a})=>`You must define either config.maxEntries or config.maxAgeSecondsin ${e}.${t}.${a}`,"statuses-or-headers-required":({moduleName:e,className:t,funcName:a})=>`You must define either config.statuses or config.headersin ${e}.${t}.${a}`,"invalid-string":({moduleName:e,funcName:t,paramName:a})=>{if(!a||!e||!t)throw new Error("Unexpected input to 'invalid-string' error.");return`When using strings, the '${a}' parameter must start with 'http' (for cross-origin matches) or '/' (for same-origin matches). Please see the docs for ${e}.${t}() for more info.`},"channel-name-required":()=>"You must provide a channelName to construct a BroadcastCacheUpdate instance.","invalid-responses-are-same-args":()=>"The arguments passed into responsesAreSame() appear to be invalid. Please ensure valid Responses are used.","expire-custom-caches-only":()=>"You must provide a 'cacheName' property when using the expiration plugin with a runtime caching strategy.","unit-must-be-bytes":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'unit-must-be-bytes' error.");return`The 'unit' portion of the Range header must be set to 'bytes'. The Range header provided was "${e}"`},"single-range-only":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'single-range-only' error.");return`Multiple ranges are not supported. Please use a  single start value, and optional end value. The Range header provided was "${e}"`},"invalid-range-values":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'invalid-range-values' error.");return`The Range header is missing both start and end values. At least one of those values is needed. The Range header provided was "${e}"`},"no-range-header":()=>"No Range header was found in the Request provided.","range-not-satisfiable":({size:e,start:t,end:a})=>`The start (${t}) and end (${a}) values in the Range are not satisfiable by the cached response, which is ${e} bytes.`,"attempt-to-cache-non-get-request":({url:e,method:t})=>`Unable to cache '${e}' because it is a '${t}' request and only 'GET' requests can be cached.`,"cache-put-with-no-response":({url:e})=>`There was an attempt to cache '${e}' but the response was not defined.`,"no-response":({url:e,error:t})=>{let a=`The strategy could not generate a response for '${e}'.`;return t&&(a+=` The underlying error is ${t}.`),a},"bad-precaching-response":({url:e,status:t})=>`The precaching request for '${e}' failed`+(t?` with an HTTP status of ${t}.`:"."),"non-precached-url":({url:e})=>`createHandlerBoundToURL('${e}') was called, but that URL is not precached. Please pass in a URL that is precached instead.`,"add-to-cache-list-conflicting-integrities":({url:e})=>"Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL "+e+" with different integrity values. Please remove one of them.","missing-precache-entry":({cacheName:e,url:t})=>`Unable to find a precached response in ${e} for ${t}.`,"cross-origin-copy-response":({origin:e})=>`workbox-core.copyResponse() can only be used with same-origin responses. It was passed a response with origin ${e}.`},t=(t,a={})=>{const s=e[t];if(!s)throw new Error(`Unable to find message for code '${t}'.`);return s(a)};class a extends Error{constructor(e,a){super(t(e,a)),this.name=e,this.details=a}}const s=(e,t,s)=>{if("function"!==typeof e[t])throw s.expectedMethod=t,new a("missing-a-method",s)},r=(e,t)=>{if(!Array.isArray(e))throw new a("not-an-array",t)},n=(e,t,s)=>{if(!(e instanceof t))throw s.expectedClass=t,new a("incorrect-class",s)},o=(e,t,s)=>{if(!t.includes(e))throw s.validValueDescription=`Valid values are ${JSON.stringify(t)}.`,new a("invalid-value",s)},i=(e,t,s)=>{if(typeof e!==t)throw s.expectedType=t,new a("incorrect-type",s)},c=(e,t,s)=>{const r=new a("not-array-of-class",s);if(!Array.isArray(e))throw r;for(const a of e)if(!(a instanceof t))throw r},h={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},l=e=>[h.prefix,e,h.suffix].filter((e=>e&&e.length>0)).join("-"),u=e=>{(e=>{for(const t of Object.keys(h))e(t)})((t=>{"string"==typeof e[t]&&(h[t]=e[t])}))},d=e=>e||l(h.precache),p=e=>e||l(h.runtime),m=(()=>{"__WB_DISABLE_DEV_LOGS"in self||(self.__WB_DISABLE_DEV_LOGS=!1);let e=!1;const t={debug:"#7f8c8d",log:"#2ecc71",warn:"#f39c12",error:"#c0392b",groupCollapsed:"#3498db",groupEnd:null},a=function(a,s){if(self.__WB_DISABLE_DEV_LOGS)return;if("groupCollapsed"===a&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent))return void console[a](...s);const r=e?[]:["%cworkbox",["background: "+t[a],"border-radius: 0.5em","color: white","font-weight: bold","padding: 2px 0.5em"].join(";")];console[a](...r,...s),"groupCollapsed"===a&&(e=!0),"groupEnd"===a&&(e=!1)},s={},r=Object.keys(t);for(const e of r){const t=e;s[t]=(...e)=>{a(t,e)}}return s})();function g(e,t){const a=t();return e.waitUntil(a),a}try{self["workbox:precaching:6.1.2"]&&_()}catch(e){}function f(e){if(!e)throw new a("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new a("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const r=new URL(s,location.href),n=new URL(s,location.href);return r.searchParams.set("__WB_REVISION__",t),{cacheKey:r.href,url:n.href}}class w{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:a})=>{if("install"===e.type){const e=t.originalRequest.url;a?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return a}}}class y{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const a=t&&t.cacheKey||this._precacheController.getCacheKeyForURL(e.url);return a?new Request(a):e},this._precacheController=e}}function b(e){const t=e.length;t>0&&(m.groupCollapsed("During precaching cleanup, "+t+" cached "+`request${1===t?" was":"s were"} deleted.`),((e,t)=>{m.groupCollapsed(e);for(const e of t)m.log(e);m.groupEnd()})("Deleted Cache Requests",e),m.groupEnd())}function N(e,t){if(0!==t.length){m.groupCollapsed(e);for(const e of t)m.log(e);m.groupEnd()}}let x;async function R(e,t){let s=null;if(e.url){s=new URL(e.url).origin}if(s!==self.location.origin)throw new a("cross-origin-copy-response",{origin:s});const r=e.clone(),n={headers:new Headers(r.headers),status:r.status,statusText:r.statusText},o=t?t(n):n,i=function(){if(void 0===x){const e=new Response("");if("body"in e)try{new Response(e.body),x=!0}catch(e){x=!1}x=!1}return x}()?r.body:await r.blob();return new Response(i,o)}const v=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");function E(e,t){const a=new URL(e);for(const e of t)a.searchParams.delete(e);return a.href}class C{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const k=new Set;try{self["workbox:strategies:6.1.2"]&&_()}catch(e){}function T(e){return"string"==typeof e?new Request(e):e}class ${constructor(e,t){this._cacheKeys={},n(t.event,ExtendableEvent,{moduleName:"workbox-strategies",className:"StrategyHandler",funcName:"constructor",paramName:"options.event"}),Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new C,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=T(e);if("navigate"===s.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse;if(e)return m.log(`Using a preloaded navigation response for '${v(s.url)}'`),e}const r=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))s=await e({request:s.clone(),event:t})}catch(e){throw new a("plugin-error-request-will-fetch",{thrownError:e})}const n=s.clone();try{let e;e=await fetch(s,"navigate"===s.mode?void 0:this._strategy.fetchOptions),m.debug(`Network request for '${v(s.url)}' returned a response with status '${e.status}'.`);for(const a of this.iterateCallbacks("fetchDidSucceed"))e=await a({event:t,request:n,response:e});return e}catch(e){throw m.log(`Network request for '${v(s.url)}' threw an error.`,e),r&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:r.clone(),request:n.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),a=t.clone();return this.waitUntil(this.cachePut(e,a)),t}async cacheMatch(e){const t=T(e);let a;const{cacheName:s,matchOptions:r}=this._strategy,n=await this.getCacheKey(t,"read"),o={...r,cacheName:s};a=await caches.match(n,o),a?m.debug(`Found a cached response in '${s}'.`):m.debug(`No cached response found in '${s}'.`);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))a=await e({cacheName:s,matchOptions:r,cachedResponse:a,request:n,event:this.event})||void 0;return a}async cachePut(e,t){const s=T(e);var r;await(r=0,new Promise((e=>setTimeout(e,r))));const n=await this.getCacheKey(s,"write");if(n.method&&"GET"!==n.method)throw new a("attempt-to-cache-non-get-request",{url:v(n.url),method:n.method});if(!t)throw m.error(`Cannot cache non-existent response for '${v(n.url)}'.`),new a("cache-put-with-no-response",{url:v(n.url)});const o=await this._ensureResponseSafeToCache(t);if(!o)return m.debug(`Response '${v(n.url)}' will not be cached.`,o),!1;const{cacheName:i,matchOptions:c}=this._strategy,h=await self.caches.open(i),l=this.hasCallback("cacheDidUpdate"),u=l?await async function(e,t,a,s){const r=E(t.url,a);if(t.url===r)return e.match(t,s);const n={...s,ignoreSearch:!0},o=await e.keys(t,n);for(const t of o)if(r===E(t.url,a))return e.match(t,s)}(h,n.clone(),["__WB_REVISION__"],c):null;m.debug(`Updating the '${i}' cache with a new Response for ${v(n.url)}.`);try{await h.put(n,l?o.clone():o)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){m.log(`About to run ${k.size} callbacks to clean up caches.`);for(const e of k)await e(),m.log(e,"is complete.");m.log("Finished running callbacks.")}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:i,oldResponse:u,newResponse:o.clone(),request:n,event:this.event});return!0}async getCacheKey(e,t){if(!this._cacheKeys[t]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=T(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[t]=a}return this._cacheKeys[t]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const a of this.iterateCallbacks(e))await a(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const a=this._pluginStateMap.get(t),s=s=>{const r={...s,state:a};return t[e](r)};yield s}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve()}async _ensureResponseSafeToCache(e){let t=e,a=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,a=!0,!t)break;return a||(t&&200!==t.status&&(t=void 0),t&&200!==t.status&&(0===t.status?m.warn(`The response for '${this.request.url}' is an opaque response. The caching strategy that you're using will not cache opaque responses by default.`):m.debug(`The response for '${this.request.url}' returned a status code of '${e.status}' and won't be cached as a result.`))),t}}class q{constructor(e={}){this.cacheName=p(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,a="string"==typeof e.request?new Request(e.request):e.request,s="params"in e?e.params:void 0,r=new $(this,{event:t,request:a,params:s}),n=this._getResponse(r,a,t);return[n,this._awaitComplete(n,r,a,t)]}async _getResponse(e,t,s){await e.runCallbacks("handlerWillStart",{event:s,request:t});let r=void 0;try{if(r=await this._handle(t,e),!r||"error"===r.type)throw new a("no-response",{url:t.url})}catch(a){for(const n of e.iterateCallbacks("handlerDidError"))if(r=await n({error:a,event:s,request:t}),r)break;if(!r)throw a;m.log(`While responding to '${v(t.url)}', an ${a} error occurred. Using a fallback response provided by a handlerDidError plugin.`)}for(const a of e.iterateCallbacks("handlerWillRespond"))r=await a({event:s,request:t,response:r});return r}async _awaitComplete(e,t,a,s){let r,n;try{r=await e}catch(n){}try{await t.runCallbacks("handlerDidRespond",{event:s,request:a,response:r}),await t.doneWaiting()}catch(e){n=e}if(await t.runCallbacks("handlerDidComplete",{event:s,request:a,response:r,error:n}),t.destroy(),n)throw n}}class U extends q{constructor(e={}){e.cacheName=d(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(U.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const a=await t.cacheMatch(e);return a||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;if(!this._fallbackToNetwork)throw new a("missing-precache-entry",{cacheName:this.cacheName,url:e.url});m.warn(`The precached response for ${v(e.url)} in ${this.cacheName} was not found. Falling back to the network instead.`),s=await t.fetch(e);{const a=t.params&&t.params.cacheKey||await t.getCacheKey(e,"read");m.groupCollapsed("Precaching is responding to: "+v(e.url)),m.log("Serving the precached url: "+v(a.url)),m.groupCollapsed("View request details here."),m.log(e),m.groupEnd(),m.groupCollapsed("View response details here."),m.log(s),m.groupEnd(),m.groupEnd()}return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new a("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[a,s]of this.plugins.entries())s!==U.copyRedirectedCacheableResponsesPlugin&&(s===U.defaultPrecacheCacheabilityPlugin&&(e=a),s.cacheWillUpdate&&t++);0===t?this.plugins.push(U.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}U.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},U.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await R(e):e};class L{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:a=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new U({cacheName:d(e),plugins:[...t,new y({precacheController:this})],fallbackToNetwork:a}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){r(e,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"addToCacheList",paramName:"entries"});const t=[];for(const s of e){"string"==typeof s?t.push(s):s&&void 0===s.revision&&t.push(s.url);const{cacheKey:e,url:r}=f(s),n="string"!=typeof s&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(r)&&this._urlsToCacheKeys.get(r)!==e)throw new a("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(r),secondEntry:e});if("string"!=typeof s&&s.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==s.integrity)throw new a("add-to-cache-list-conflicting-integrities",{url:r});this._cacheKeysToIntegrities.set(e,s.integrity)}if(this._urlsToCacheKeys.set(r,e),this._urlsToCacheModes.set(r,n),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;m.warn(e)}}}install(e){return g(e,(async()=>{const t=new w;this.strategy.plugins.push(t);for(const[t,a]of this._urlsToCacheKeys){const s=this._cacheKeysToIntegrities.get(a),r=this._urlsToCacheModes.get(t),n=new Request(t,{integrity:s,cache:r,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:a},request:n,event:e}))}const{updatedURLs:a,notUpdatedURLs:s}=t;return function(e,t){const a=e.length,s=t.length;if(a||s){let r=`Precaching ${a} file${1===a?"":"s"}.`;s>0&&(r+=` ${s} file${1===s?" is":"s are"} already cached.`),m.groupCollapsed(r),N("View newly precached URLs.",e),N("View previously precached URLs.",t),m.groupEnd()}}(a,s),{updatedURLs:a,notUpdatedURLs:s}}))}activate(e){return g(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),a=new Set(this._urlsToCacheKeys.values()),s=[];for(const r of t)a.has(r.url)||(await e.delete(r),s.push(r.url));return b(s),{deletedURLs:s}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,a=this.getCacheKeyForURL(t);if(a){return(await self.caches.open(this.strategy.cacheName)).match(a)}}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new a("non-precached-url",{url:e});return a=>(a.request=new Request(e),a.params={cacheKey:t,...a.params},this.strategy.handle(a))}}let P;const A=()=>(P||(P=new L),P);try{self["workbox:routing:6.1.2"]&&_()}catch(e){}const S=["DELETE","GET","HEAD","PATCH","POST","PUT"],K=e=>e&&"object"==typeof e?(s(e,"handle",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),e):(i(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),{handle:e});class D{constructor(e,t,a="GET"){i(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"match"}),a&&o(a,S,{paramName:"method"}),this.handler=K(t),this.match=e,this.method=a}setCatchHandler(e){this.catchHandler=K(e)}}class O extends D{constructor(e,t,a){n(e,RegExp,{moduleName:"workbox-routing",className:"RegExpRoute",funcName:"constructor",paramName:"pattern"});super((({url:t})=>{const a=e.exec(t.href);if(a){if(t.origin===location.origin||0===a.index)return a.slice(1);m.debug(`The regular expression '${e}' only partially matched against the cross-origin URL '${t}'. RegExpRoute's will only handle cross-origin requests if they match the entire URL.`)}}),t,a)}}class M{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,a=this.handleRequest({request:t,event:e});a&&e.respondWith(a)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;m.debug("Caching URLs from the window",t.urlsToCache);const a=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const a=new Request(...t);return this.handleRequest({request:a,event:e})})));e.waitUntil(a),e.ports&&e.ports[0]&&a.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){n(e,Request,{moduleName:"workbox-routing",className:"Router",funcName:"handleRequest",paramName:"options.request"});const a=new URL(e.url,location.href);if(!a.protocol.startsWith("http"))return void m.debug("Workbox Router only supports URLs that start with 'http'.");const s=a.origin===location.origin,{params:r,route:o}=this.findMatchingRoute({event:t,request:e,sameOrigin:s,url:a});let i=o&&o.handler;const c=[];i&&(c.push(["Found a route to handle this request:",o]),r&&c.push(["Passing the following params to the route's handler:",r]));const h=e.method;if(!i&&this._defaultHandlerMap.has(h)&&(c.push(`Failed to find a matching route. Falling back to the default handler for ${h}.`),i=this._defaultHandlerMap.get(h)),!i)return void m.debug("No route found for: "+v(a));let l;m.groupCollapsed("Router is responding to: "+v(a)),c.forEach((e=>{Array.isArray(e)?m.log(...e):m.log(e)})),m.groupEnd();try{l=i.handle({url:a,request:e,event:t,params:r})}catch(e){l=Promise.reject(e)}const u=o&&o.catchHandler;return l instanceof Promise&&(this._catchHandler||u)&&(l=l.catch((async s=>{if(u){m.groupCollapsed(`Error thrown when responding to:  ${v(a)}. Falling back to route's Catch Handler.`),m.error("Error thrown by:",o),m.error(s),m.groupEnd();try{return await u.handle({url:a,request:e,event:t,params:r})}catch(e){s=e}}if(this._catchHandler)return m.groupCollapsed(`Error thrown when responding to:  ${v(a)}. Falling back to global Catch Handler.`),m.error("Error thrown by:",o),m.error(s),m.groupEnd(),this._catchHandler.handle({url:a,request:e,event:t});throw s}))),l}findMatchingRoute({url:e,sameOrigin:t,request:a,event:s}){const r=this._routes.get(a.method)||[];for(const n of r){let r;const o=n.match({url:e,sameOrigin:t,request:a,event:s});if(o)return o instanceof Promise&&m.warn(`While routing ${v(e)}, an async matchCallback function was used. Please convert the following route to use a synchronous matchCallback function:`,n),r=o,(Array.isArray(o)&&0===o.length||o.constructor===Object&&0===Object.keys(o).length||"boolean"==typeof o)&&(r=void 0),{route:n,params:r}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,K(e))}setCatchHandler(e){this._catchHandler=K(e)}registerRoute(e){i(e,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),s(e,"match",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),i(e.handler,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),s(e.handler,"handle",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.handler"}),i(e.method,"string",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.method"}),this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new a("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new a("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}}let W;const I=()=>(W||(W=new M,W.addFetchListener(),W.addCacheListener()),W);function H(e,t,s){let r;if("string"==typeof e){const n=new URL(e,location.href);{if(!e.startsWith("/")&&!e.startsWith("http"))throw new a("invalid-string",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});const t=e.startsWith("http")?n.pathname:e,s="[*:?+]";new RegExp(""+s).exec(t)&&m.debug(`The '$capture' parameter contains an Express-style wildcard character (${s}). Strings are now always interpreted as exact matches; use a RegExp for partial or wildcard matches.`)}r=new D((({url:t})=>(t.pathname===n.pathname&&t.origin!==n.origin&&m.debug(e+" only partially matches the cross-origin URL "+t+". This route will only handle cross-origin requests if they match the entire URL."),t.href===n.href)),t,s)}else if(e instanceof RegExp)r=new O(e,t,s);else if("function"==typeof e)r=new D(e,t,s);else{if(!(e instanceof D))throw new a("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=e}return I().registerRoute(r),r}class j extends D{constructor(e,t){super((({request:a})=>{const s=e.getURLsToCacheKeys();for(const e of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:a="index.html",cleanURLs:s=!0,urlManipulation:r}={}){const n=new URL(e,location.href);n.hash="",yield n.href;const o=function(e,t=[]){for(const a of[...e.searchParams.keys()])t.some((e=>e.test(a)))&&e.searchParams.delete(a);return e}(n,t);if(yield o.href,a&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=a,yield e.href}if(s){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:n});for(const t of e)yield t.href}}(a.url,t)){const t=s.get(e);if(t)return{cacheKey:t}}m.debug("Precaching did not find a match for "+v(a.url))}),e.strategy)}}function F(e){e.then((()=>{}))}class B{constructor(e,t,{onupgradeneeded:a,onversionchange:s}={}){this._db=null,this._name=e,this._version=t,this._onupgradeneeded=a,this._onversionchange=s||(()=>this.close())}get db(){return this._db}async open(){if(!this._db)return this._db=await new Promise(((e,t)=>{let a=!1;setTimeout((()=>{a=!0,t(new Error("The open request was blocked and timed out"))}),this.OPEN_TIMEOUT);const s=indexedDB.open(this._name,this._version);s.onerror=()=>t(s.error),s.onupgradeneeded=e=>{a?(s.transaction.abort(),s.result.close()):"function"==typeof this._onupgradeneeded&&this._onupgradeneeded(e)},s.onsuccess=()=>{const t=s.result;a?t.close():(t.onversionchange=this._onversionchange.bind(this),e(t))}})),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,a){return await this.getAllMatching(e,{query:t,count:a})}async getAllKeys(e,t,a){return(await this.getAllMatching(e,{query:t,count:a,includeKeys:!0})).map((e=>e.key))}async getAllMatching(e,{index:t,query:a=null,direction:s="next",count:r,includeKeys:n=!1}={}){return await this.transaction([e],"readonly",((o,i)=>{const c=o.objectStore(e),h=t?c.index(t):c,l=[],u=h.openCursor(a,s);u.onsuccess=()=>{const e=u.result;e?(l.push(n?e:e.value),r&&l.length>=r?i(l):e.continue()):i(l)}}))}async transaction(e,t,a){return await this.open(),await new Promise(((s,r)=>{const n=this._db.transaction(e,t);n.onabort=()=>r(n.error),n.oncomplete=()=>s(),a(n,(e=>s(e)))}))}async _call(e,t,a,...s){return await this.transaction([t],a,((a,r)=>{const n=a.objectStore(t),o=n[e].apply(n,s);o.onsuccess=()=>r(o.result)}))}close(){this._db&&(this._db.close(),this._db=null)}}B.prototype.OPEN_TIMEOUT=2e3;const V={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(V))for(const a of t)a in IDBObjectStore.prototype&&(B.prototype[a]=async function(t,...s){return await this._call(a,t,e,...s)});const G=(e,t)=>`Using ${e} to respond to '${v(t.url)}'`,J=e=>{e&&(m.groupCollapsed("View the final response here."),m.log(e||"[No response returned]"),m.groupEnd())};class z extends q{async _handle(e,t){const s=[];n(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"makeRequest",paramName:"request"});let r,o=await t.cacheMatch(e);if(o)s.push(`Found a cached response in the '${this.cacheName}' cache.`);else{s.push(`No response found in the '${this.cacheName}' cache. Will respond with a network request.`);try{o=await t.fetchAndCachePut(e)}catch(e){r=e}o?s.push("Got response from network."):s.push("Unable to get a response from the network.")}m.groupCollapsed(G(this.constructor.name,e));for(const e of s)m.log(e);if(J(o),m.groupEnd(),!o)throw new a("no-response",{url:e.url,error:r});return o}}const Y={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class Q extends q{constructor(e){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(Y)}async _handle(e,t){const s=[];n(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"request"});const r=t.fetchAndCachePut(e).catch((()=>{}));let o,i=await t.cacheMatch(e);if(i)s.push(`Found a cached response in the '${this.cacheName}' cache. Will update with the network response in the background.`);else{s.push(`No response found in the '${this.cacheName}' cache. Will wait for the network response.`);try{i=await r}catch(e){o=e}}m.groupCollapsed(G(this.constructor.name,e));for(const e of s)m.log(e);if(J(i),m.groupEnd(),!i)throw new a("no-response",{url:e.url,error:o});return i}}try{self["workbox:expiration:6.1.2"]&&_()}catch(e){}const X="cache-entries",Z=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class ee{constructor(e){this._cacheName=e,this._db=new B("workbox-expiration",1,{onupgradeneeded:e=>this._handleUpgrade(e)})}_handleUpgrade(e){const t=e.target.result.createObjectStore(X,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise(((t,a)=>{const s=indexedDB.deleteDatabase(e);s.onerror=()=>{a(s.error)},s.onblocked=()=>{a(new Error("Delete blocked"))},s.onsuccess=()=>{t()}}))})(this._cacheName)}async setTimestamp(e,t){const a={url:e=Z(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)};await this._db.put(X,a)}async getTimestamp(e){return(await this._db.get(X,this._getId(e))).timestamp}async expireEntries(e,t){const a=await this._db.transaction(X,"readwrite",((a,s)=>{const r=a.objectStore(X).index("timestamp").openCursor(null,"prev"),n=[];let o=0;r.onsuccess=()=>{const a=r.result;if(a){const s=a.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&o>=t?n.push(a.value):o++),a.continue()}else s(n)}})),s=[];for(const e of a)await this._db.delete(X,e.id),s.push(e.url);return s}_getId(e){return this._cacheName+"|"+Z(e)}}class te{constructor(e,t={}){if(this._isRunning=!1,this._rerunRequested=!1,i(e,"string",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"cacheName"}),!t.maxEntries&&!t.maxAgeSeconds)throw new a("max-entries-or-age-required",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor"});t.maxEntries&&i(t.maxEntries,"number",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"config.maxEntries"}),t.maxAgeSeconds&&i(t.maxAgeSeconds,"number",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"config.maxAgeSeconds"}),this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new ee(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),a=await self.caches.open(this._cacheName);for(const e of t)await a.delete(e,this._matchOptions);t.length>0?(m.groupCollapsed(`Expired ${t.length} `+(1===t.length?"entry":"entries")+" and removed "+(1===t.length?"it":"them")+" from the "+`'${this._cacheName}' cache.`),m.log(`Expired the following ${1===t.length?"URL":"URLs"}:`),t.forEach((e=>m.log("    "+e))),m.groupEnd()):m.debug("Cache expiration ran and found no entries to remove."),this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,F(this.expireEntries()))}async updateTimestamp(e){i(e,"string",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"updateTimestamp",paramName:"url"}),await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){return await this._timestampModel.getTimestamp(e)<Date.now()-1e3*this._maxAgeSeconds}throw new a("expired-test-without-max-age",{methodName:"isURLExpired",paramName:"maxAgeSeconds"})}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class ae{constructor(e={}){if(this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:a,cachedResponse:s})=>{if(!s)return null;const r=this._isResponseDateFresh(s),n=this._getCacheExpiration(a);F(n.expireEntries());const o=n.updateTimestamp(t.url);if(e)try{e.waitUntil(o)}catch(t){"request"in e&&m.warn(`Unable to ensure service worker stays alive when updating cache entry for '${v(e.request.url)}'.`)}return r?s:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{i(e,"string",{moduleName:"workbox-expiration",className:"Plugin",funcName:"cacheDidUpdate",paramName:"cacheName"}),n(t,Request,{moduleName:"workbox-expiration",className:"Plugin",funcName:"cacheDidUpdate",paramName:"request"});const a=this._getCacheExpiration(e);await a.updateTimestamp(t.url),await a.expireEntries()},!e.maxEntries&&!e.maxAgeSeconds)throw new a("max-entries-or-age-required",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor"});var t;e.maxEntries&&i(e.maxEntries,"number",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor",paramName:"config.maxEntries"}),e.maxAgeSeconds&&i(e.maxAgeSeconds,"number",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor",paramName:"config.maxAgeSeconds"}),this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&(i(t=()=>this.deleteCacheAndMetadata(),"function",{moduleName:"workbox-core",funcName:"register",paramName:"callback"}),k.add(t),m.log("Registered a callback to respond to quota errors.",t))}_getCacheExpiration(e){if(e===p())throw new a("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new te(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(null===t)return!0;return t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),a=new Date(t).getTime();return isNaN(a)?null:a}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}try{self["workbox:cacheable-response:6.1.2"]&&_()}catch(e){}class se{constructor(e={}){if(!e.statuses&&!e.headers)throw new a("statuses-or-headers-required",{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor"});e.statuses&&r(e.statuses,{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor",paramName:"config.statuses"}),e.headers&&i(e.headers,"object",{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor",paramName:"config.headers"}),this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){n(e,Response,{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"isResponseCacheable",paramName:"response"});let t=!0;if(this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some((t=>e.headers.get(t)===this._headers[t]))),!t){m.groupCollapsed(`The request for '${v(e.url)}' returned a response that does not meet the criteria for being cached.`),m.groupCollapsed("View cacheability criteria here."),m.log("Cacheable statuses: "+JSON.stringify(this._statuses)),m.log("Cacheable headers: "+JSON.stringify(this._headers,null,2)),m.groupEnd();const t={};e.headers.forEach(((e,a)=>{t[a]=e})),m.groupCollapsed("View response status and headers here."),m.log("Response status: "+e.status),m.log("Response headers: "+JSON.stringify(t,null,2)),m.groupEnd(),m.groupCollapsed("View full response details here."),m.log(e.headers),m.log(e),m.groupEnd(),m.groupEnd()}return t}}class re{constructor(e){this.cacheWillUpdate=async({response:e})=>this._cacheableResponse.isResponseCacheable(e)?e:null,this._cacheableResponse=new se(e)}}try{self["workbox:recipes:6.1.2"]&&_()}catch(e){}var ne;self.addEventListener("activate",(()=>self.clients.claim())),self.skipWaiting(),function(e){if(Object.keys(e).forEach((t=>{i(e[t],"string",{moduleName:"workbox-core",funcName:"setCacheNameDetails",paramName:"details."+t})})),"precache"in e&&0===e.precache.length)throw new a("invalid-cache-name",{cacheNameId:"precache",value:e.precache});if("runtime"in e&&0===e.runtime.length)throw new a("invalid-cache-name",{cacheNameId:"runtime",value:e.runtime});if("googleAnalytics"in e&&0===e.googleAnalytics.length)throw new a("invalid-cache-name",{cacheNameId:"googleAnalytics",value:e.googleAnalytics});u(e)}({precache:"wb6-precache",runtime:"wb6-runtime"}),function(e){A().precache(e)}([{revision:"698fd10d556c218fb428b2f8913b3f36",url:"favicon.ico"},{revision:"a5db8483544a37e0f5e9e503c1d62f8d",url:"index.html"},{revision:null,url:"styles.c2761edff7776e1e48a3.css"},{revision:null,url:"main.34827f39578469476a05.js"},{revision:null,url:"polyfills.25b2e0ae5a439ecc1193.js"},{revision:null,url:"runtime.359d5ee4682f20e936e9.js"},{revision:"b6f448e81e669bc05b47e542ef085ada",url:"assets/img/favicon.png"},{revision:"f5fd664cc80a6c77d6c79e5bd2653426",url:"assets/img/logo.png"},{revision:"33c3a22c05e810d2bb622d7edb27908a",url:"assets/img/pwa-logo.png"},{revision:"95a0305c869feb313074df730fc4f865",url:"offline/offline.html"},{revision:"33c3a22c05e810d2bb622d7edb27908a",url:"offline/offline.png"}]),function(e){const t=A();H(new j(t,e))}(ne);const oe=(ie="/index.html",A().createHandlerBoundToURL(ie));var ie;H(new class extends D{constructor(e,{allowlist:t=[/./],denylist:a=[]}={}){c(t,RegExp,{moduleName:"workbox-routing",className:"NavigationRoute",funcName:"constructor",paramName:"options.allowlist"}),c(a,RegExp,{moduleName:"workbox-routing",className:"NavigationRoute",funcName:"constructor",paramName:"options.denylist"}),super((e=>this._match(e)),e),this._allowlist=t,this._denylist=a}_match({url:e,request:t}){if(t&&"navigate"!==t.mode)return!1;const a=e.pathname+e.search;for(const e of this._denylist)if(e.test(a))return m.log(`The navigation route ${a} is not being used, since the URL matches this denylist pattern: `+e),!1;return this._allowlist.some((e=>e.test(a)))?(m.debug(`The navigation route ${a} is being used.`),!0):(m.log(`The navigation route ${a} is not being used, since the URL being navigated to doesn't match the allowlist.`),!1)}}(oe,{denylist:[new RegExp("/out-of-spa/")]})),H(new RegExp("https://progwebnews-app.azurewebsites.net.*content/posts/slug.*"),new Q({cacheName:"wb6-post",plugins:[new ae({maxAgeSeconds:604800})]})),H(new RegExp("https://progwebnews-app.azurewebsites.net.*content/posts.*"),new class extends q{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(Y),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0,this._networkTimeoutSeconds&&i(this._networkTimeoutSeconds,"number",{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"constructor",paramName:"networkTimeoutSeconds"})}async _handle(e,t){const s=[];n(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"makeRequest"});const r=[];let o;if(this._networkTimeoutSeconds){const{id:a,promise:n}=this._getTimeoutPromise({request:e,logs:s,handler:t});o=a,r.push(n)}const i=this._getNetworkPromise({timeoutId:o,request:e,logs:s,handler:t});r.push(i);const c=await t.waitUntil((async()=>await t.waitUntil(Promise.race(r))||await i)());m.groupCollapsed(G(this.constructor.name,e));for(const e of s)m.log(e);if(J(c),m.groupEnd(),!c)throw new a("no-response",{url:e.url});return c}_getTimeoutPromise({request:e,logs:t,handler:a}){let s;return{promise:new Promise((r=>{s=setTimeout((async()=>{t.push("Timing out the network response at "+this._networkTimeoutSeconds+" seconds."),r(await a.cacheMatch(e))}),1e3*this._networkTimeoutSeconds)})),id:s}}async _getNetworkPromise({timeoutId:e,request:t,logs:a,handler:s}){let r,n;try{n=await s.fetchAndCachePut(t)}catch(e){r=e}return e&&clearTimeout(e),n?a.push("Got response from network."):a.push("Unable to get a response from the network. Will respond with a cached response."),!r&&n||(n=await s.cacheMatch(t),n?a.push(`Found a cached response in the '${this.cacheName}' cache.`):a.push(`No response found in the '${this.cacheName}' cache.`)),n}}),H((({url:e})=>e.hostname.includes("gravatar.com")),new z({plugins:[new re({statuses:[0,200]})]})),function(e={}){const t=(e.cachePrefix||"google-fonts")+"-stylesheets",a=(e.cachePrefix||"google-fonts")+"-webfonts",s=e.maxAgeSeconds||31536e3,r=e.maxEntries||30;H((({url:e})=>"https://fonts.googleapis.com"===e.origin),new Q({cacheName:t})),H((({url:e})=>"https://fonts.gstatic.com"===e.origin),new z({cacheName:a,plugins:[new re({statuses:[0,200]}),new ae({maxAgeSeconds:s,maxEntries:r})]}))}({cachePrefix:"wb6-gfonts"}),function(e={}){const t=e.cacheName||"images",a=e.matchCallback||(({request:e})=>"image"===e.destination),s=e.maxAgeSeconds||2592e3,r=e.maxEntries||60,n=e.plugins||[];n.push(new re({statuses:[0,200]})),n.push(new ae({maxEntries:r,maxAgeSeconds:s}));const o=new z({cacheName:t,plugins:n});H(a,o),e.warmCache&&function(e){self.addEventListener("install",(t=>{const a=e.urls.map((a=>e.strategy.handleAll({event:t,request:new Request(a)})[1]));t.waitUntil(Promise.all(a))}))}({urls:e.warmCache,strategy:o})}({cacheName:"wb6-content-images",maxEntries:10})}();
